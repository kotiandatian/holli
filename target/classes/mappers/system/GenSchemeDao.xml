<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.framework.loippi.dao.GenSchemeDao">

	<resultMap id="GenSchemeResultMap" type="com.framework.loippi.entity.GenScheme">
		<id property="id" column="id"  />
		<result property="createDate" column="create_date" />
		<result property="creator" column="creator" />
		<result property="updateDate" column="update_date" />
		<result property="updator" column="updator" />
		<result property="strategy" column="strategy" />
		<result property="schemeName" column="scheme_name" />
		<result property="schemeTemplate" column="scheme_template" />
		<result property="packageName" column="package_name" />
		<result property="description" column="description" />
		<result property="author" column="author" />
		<result property="genTableId" column="gen_table_id" />
		<result property="moduleName" column="module_name" />
	</resultMap>
	<!-- 定义可重用的SQL代码段，可以包含在其他语句中 -->
	<sql id="base_column">
		 id ,create_date ,creator ,update_date ,updator ,strategy ,scheme_name ,scheme_template ,package_name ,description ,author ,gen_table_id ,module_name 
	</sql>

	<sql id="base_value_column">
		#{id},#{createDate},#{creator},#{updateDate},#{updator},#{strategy},#{schemeName},#{schemeTemplate},#{packageName},#{description},#{author},#{genTableId},#{moduleName}
	</sql>

	<!-- 定义可重用的WHERE SQL公共代码段，可以包含在其他语句中 -->
	<sql id="where_column">
		<if test="id != null ">
			AND id = #{id,jdbcType=BIGINT}
		</if>

	    	<!-- 大于等于id -->
		<if test="filter_ids != null">
			AND id<![CDATA[>=]]>#{filter_ids}
		</if>
		<!-- 小于等于id -->
	    <if test="filter_ide!= null">
			AND id<![CDATA[<=]]>#{filter_ide}
		</if>


		<if test="createDate != null ">
			AND create_date = #{createDate,jdbcType=TIMESTAMP}
		</if>
	    	<!-- 大于等于create_date -->
		<if test="filter_createDates != null">
			AND date_format(create_date,'%Y%m%d')<![CDATA[>=]]>#{filter_createDates}
		</if>
		<!-- 小于等于create_date -->
	    <if test="filter_createDatee!= null">
			AND date_format(create_date,'%Y%m%d')<![CDATA[<=]]>#{filter_createDatee}
		</if>



		<if test="creator != null ">
			AND creator = #{creator,jdbcType=BIGINT}
		</if>

	    	<!-- 大于等于creator -->
		<if test="filter_creators != null">
			AND creator<![CDATA[>=]]>#{filter_creators}
		</if>
		<!-- 小于等于creator -->
	    <if test="filter_creatore!= null">
			AND creator<![CDATA[<=]]>#{filter_creatore}
		</if>


		<if test="updateDate != null ">
			AND update_date = #{updateDate,jdbcType=TIMESTAMP}
		</if>
	    	<!-- 大于等于update_date -->
		<if test="filter_updateDates != null">
			AND date_format(update_date,'%Y%m%d')<![CDATA[>=]]>#{filter_updateDates}
		</if>
		<!-- 小于等于update_date -->
	    <if test="filter_updateDatee!= null">
			AND date_format(update_date,'%Y%m%d')<![CDATA[<=]]>#{filter_updateDatee}
		</if>



		<if test="updator != null ">
			AND updator = #{updator,jdbcType=BIGINT}
		</if>

	    	<!-- 大于等于updator -->
		<if test="filter_updators != null">
			AND updator<![CDATA[>=]]>#{filter_updators}
		</if>
		<!-- 小于等于updator -->
	    <if test="filter_updatore!= null">
			AND updator<![CDATA[<=]]>#{filter_updatore}
		</if>


		<if test="strategy != null ">
			AND strategy = #{strategy,jdbcType=VARCHAR}
		</if>
	   <if test="strategylike != null ">
			AND strategy like CONCAT('%',#{strategylike},'%')
		</if>



		<if test="schemeName != null ">
			AND scheme_name = #{schemeName,jdbcType=VARCHAR}
		</if>
	   <if test="schemeNamelike != null ">
			AND scheme_name like CONCAT('%',#{schemeNamelike},'%')
		</if>



		<if test="schemeTemplate != null ">
			AND scheme_template = #{schemeTemplate,jdbcType=VARCHAR}
		</if>
	   <if test="schemeTemplatelike != null ">
			AND scheme_template like CONCAT('%',#{schemeTemplatelike},'%')
		</if>



		<if test="packageName != null ">
			AND package_name = #{packageName,jdbcType=VARCHAR}
		</if>
	   <if test="packageNamelike != null ">
			AND package_name like CONCAT('%',#{packageNamelike},'%')
		</if>



		<if test="description != null ">
			AND description = #{description,jdbcType=VARCHAR}
		</if>
	   <if test="descriptionlike != null ">
			AND description like CONCAT('%',#{descriptionlike},'%')
		</if>



		<if test="author != null ">
			AND author = #{author,jdbcType=VARCHAR}
		</if>
	   <if test="authorlike != null ">
			AND author like CONCAT('%',#{authorlike},'%')
		</if>



		<if test="genTableId != null ">
			AND gen_table_id = #{genTableId,jdbcType=BIGINT}
		</if>

	    	<!-- 大于等于gen_table_id -->
		<if test="filter_genTableIds != null">
			AND gen_table_id<![CDATA[>=]]>#{filter_genTableIds}
		</if>
		<!-- 小于等于gen_table_id -->
	    <if test="filter_genTableIde!= null">
			AND gen_table_id<![CDATA[<=]]>#{filter_genTableIde}
		</if>


		<if test="moduleName != null ">
			AND module_name = #{moduleName,jdbcType=VARCHAR}
		</if>
	   <if test="moduleNamelike != null ">
			AND module_name like CONCAT('%',#{moduleNamelike},'%')
		</if>


	</sql>

	<sql id="set_column">
		<if test="id != null ">
			id = #{id,jdbcType=BIGINT},
		</if>
		<if test="createDate != null ">
			create_date = #{createDate,jdbcType=TIMESTAMP},
		</if>
		<if test="creator != null ">
			creator = #{creator,jdbcType=BIGINT},
		</if>
		<if test="updateDate != null ">
			update_date = #{updateDate,jdbcType=TIMESTAMP},
		</if>
		<if test="updator != null ">
			updator = #{updator,jdbcType=BIGINT},
		</if>
		<if test="strategy != null ">
			strategy = #{strategy,jdbcType=VARCHAR},
		</if>
		<if test="schemeName != null ">
			scheme_name = #{schemeName,jdbcType=VARCHAR},
		</if>
		<if test="schemeTemplate != null ">
			scheme_template = #{schemeTemplate,jdbcType=VARCHAR},
		</if>
		<if test="packageName != null ">
			package_name = #{packageName,jdbcType=VARCHAR},
		</if>
		<if test="description != null ">
			description = #{description,jdbcType=VARCHAR},
		</if>
		<if test="author != null ">
			author = #{author,jdbcType=VARCHAR},
		</if>
		<if test="genTableId != null ">
			gen_table_id = #{genTableId,jdbcType=BIGINT},
		</if>
		<if test="moduleName != null ">
			module_name = #{moduleName,jdbcType=VARCHAR},
		</if>
	</sql>


	<select id="find" resultMap="GenSchemeResultMap">
		SELECT
		<include refid="base_column" />
		FROM t_gen_scheme
		WHERE ID=#{id,jdbcType=BIGINT}
	</select>

	<select id="findAll" resultMap="GenSchemeResultMap">
		SELECT
		<include refid="base_column" />
		FROM t_gen_scheme
	</select>

	<insert id="insert" parameterType="com.framework.loippi.entity.GenScheme">
		<selectKey resultType="java.lang.Long" order="AFTER"
			keyProperty="id">
			SELECT LAST_INSERT_ID() AS ID
		</selectKey>
		INSERT t_gen_scheme
		(
		<include refid="base_column" />
		)
		VALUES (
		<include refid="base_value_column" />
		)
	</insert>

	<update id="update" parameterType="com.framework.loippi.entity.GenScheme">
		UPDATE t_gen_scheme
		<set>
			<include refid="set_column" />
		</set>
		WHERE ID = #{id,jdbcType=BIGINT}
	</update>

	<delete id="delete">
		DELETE FROM t_gen_scheme
		WHERE ID =
		#{id,jdbcType=BIGINT}
	</delete>

	<delete id="deleteAll">
		DELETE FROM t_gen_scheme
		WHERE ID IN
		<foreach item="ItemId" index="index" collection="ids" open="("
			separator="," close=")">
			#{ItemId}
		</foreach>
	</delete>

	<select id="findByParams" resultMap="GenSchemeResultMap">
		SELECT
		<include refid="base_column" />
		FROM t_gen_scheme
		<where>
			<include refid="where_column" />
		</where>
		
		   <if test="order != null and order != ''">
		order by  ${order}
	     </if>
	     
		<if test="pageNumber != null  and pageSize !=null ">
			limit  #{pageNumber,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
	     </if>
		
	</select>

	<select id="findByPage" resultMap="GenSchemeResultMap">
		SELECT
		<include refid="base_column" />
		FROM t_gen_scheme
		<where>
			<include refid="where_column" />
		</where>
	</select>
<!-- 统计记录数 -->
	<select id="count" resultType="long">
		SELECT COUNT(*) FROM t_gen_table_column
		<where> 
			<include refid="where_column" />
		</where>
	</select>
</mapper> 